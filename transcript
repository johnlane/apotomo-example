$ rails new apotomo-tweet
$ echo 'apotomo-tweet' > apotomo-tweet/.ruby-gemset
$ echo 'ruby-2.0.0-p247' > apotomo-tweet/.ruby-version
$ cd apotomo-tweet

$ git init
$ git add .
$ git commit -m "new rails4 app for apotomo tutorial"

Edit Gemfile to add:

    gem 'apotomo', '~>1.2.4'
    gem 'haml'

$ bundle install
$ git commit -a -m "Gemfile and bundle"

$ rails generate jquery:install
$ rails generate model tweet text:string
$ rake db:migrate
$ rails generate controller dashboard index
$ rails generate apotomo:widget twitter display -e haml


Now edit files as per tutorial "http://apotomo.de/peters-guide-1.1/introduction.html"

1. app/views/layouts/application.html.haml [ see point 1]
2. app/widgets/twitter_widget.rb
3. app/controllers/dashboard_controller.rb
4. app/views/dashboard/index.html.haml
5. app/widgets/twitter/display.html.haml   [see point 2]

[1] I changed this file's content to the below:

%html
%head
  = javascript_include_tag "application", "data-turbolinks-track" => true
  = stylesheet_link_tag "application", media: "all", "data-turbolinks-track" => true
  = csrf_meta_tags

%body
  = yield

(an alternative is to not create this file and keep "app/views/layouts/application.html.erb" insead - deleted below)

[1] I changed '-' to '=' on lines 1 and 10

Delete some files:
$ rm app/views/layouts/application.html.erb
$ rm app/views/dashboard/index.html.erb

Run the application

$ rails s

Browse to http://localhost:3000/dashboard/index

End of tutorial page 1

Part Two: Using views and states
http://apotomo.de/peters-guide-1.1/using-states.html

Create new/modify files for 'list' view/state:

1. app/widgets/twitter/list.haml
2. app/widgets/twitter/display.html.haml
3. app/widgets/twitter_widget.rb

Create new/modify files for 'form' view/state:

1. app/widgets/twitter/display.html.haml
2. app/widgets/twitter/form.haml   [see note 1]
3. app/widgets/twitter_widget.rb

[1] Changed "- form_tag' to '= form_tag' on line 4.

DRY the widget class

1. app/widgets/twitter_widget.rb

End of Part Two.

Part Three: Model Validation via AJAX
http://apotomo.de/peters-guide-1.1/ajax-validation.html

Create new/modify files for 'validation:

1.   app/models/tweet.rb
2.   app/widgets/twitter/form.haml
3.   app/widgets/twitter_widget.rb

At this point the application stops working.

    NoMethodError in Dashboard#index
    f.error_messages

This was deprecated by Rails 3.0 and moved to a plugin. So I add the gem:

    gem 'dynamic_form'
  
$ bundle update

Now the app runs again but tweeting causes another error:

ActiveModel::ForbiddenAttributesError (ActiveModel::ForbiddenAttributesError):
  app/widgets/twitter_widget.rb:11:in `process_tweet'

To fix this one we need to whitelist the "text" attribute. In file 'app/widgets/twitter_widget.rb', change line 11 from

    @tweet.update_attributes(evt[:tweet])
to
    @tweet.update_attributes(evt[:tweet].permit(:text))


At this point I decided to remove deprecation warnings.

To fix "Calling #find(:all) is deprecated. Please call #all directly instead.", I changed 'app/widgets/twitter_widget.rb' line 5 from

    @tweets = Tweet.find(:all)
to
    @tweets = Tweet.all

end of Part Three.

Part Four: Namespacing widgets
http://apotomo.de/peters-guide-1.1/namespacing.html

$ rails g apotomo:widget Twitter::Form display -e haml

I had to hope for the best with 'app/widgets/twitter/panel_widget.rb' as its content isn't displayed on the tutorial page. I ended up with the following changes:

modified:   app/controllers/dashboard_controller.rb
modified:   app/views/dashboard/index.html.haml
renamed:    app/widgets/twitter/form.haml -> app/widgets/twitter/form/display.html.haml
new file:   app/widgets/twitter/form_widget.rb
renamed:    app/widgets/twitter/display.html.haml -> app/widgets/twitter/panel/display.html.haml
renamed:    app/widgets/twitter/list.haml -> app/widgets/twitter/panel/list.haml
new file:   app/widgets/twitter/panel_widget.rb
deleted:    app/widgets/twitter_widget.rb
new file:   test/widgets/twitter/form_widget_test.rb

Note, in 'form_widget.rb' the change of line 12 from

    if @tweet.update_attributes(evt[:tweet])
to
    if @tweet.update_attributes(evt[:tweet].permit(:text))

end of PartFour.

 Part Five: Nesting widgets, pt. 1
http://apotomo.de/peters-guide-1.1/simple-nesting.html

First, "public nesting". Modified files as per tutorial:

1. app/controllers/dashboard_controller.rb
2. app/views/dashboard/index.html.haml
3. app/widgets/twitter/panel/display.html.haml

I noted that the application did not work with just the "public nesting" in place. I got the below error:

NoMethodError in Dashboard#index
Showing .../app/views/dashboard/index.html.haml where line #5 raised:
undefined method `<<' for #<Apotomo::WidgetShortcuts::FactoryProxy:0x007ff0904de9e0>
= render_widget :twitter

After implementing the "private nesting", it works again. Modified files as per tutorial:

1. app/controllers/dashboard_controller.rb
2. app/widgets/twitter/panel_widget.rb

end of Part Five.

Part Six: Bubbling Events, pt. 1
http://apotomo.de/peters-guide-1.1/simple-events.html

Modified 2 files as per tutorial.

1. app/widgets/twitter/form_widget.rb
2. app/widgets/twitter/panel_widget.rb

Note use of "Tweet.all" instead of deprecated "Tweet.find(:all)" in panel_widget.rb.

end of Part Six.
